/*! lambdaroyal-autobahn 2019-02-19 */

!function(t,e){"function"==typeof define&&define.amd?define([],e):"undefined"!=typeof module&&module.exports?module.exports=e():t.Autobahn=e()}(this,function(){var t,c=function(){for(var t=[],e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",s=0;s<10;s++)t.push(e.charAt(Math.floor(Math.random()*e.length)));return t.join("")},h=(t=0,function(){return arguments.length?t=arguments[0]:t+=1,t}),n=function(t,e){var s=function(){return arguments.length&&(t=arguments[0],e&&e(t)),t};return s.toJSON=function(){return t},s},r=function(){this.topics=new Map,this.sub=function(t,e){var s=this.topics.get(t);void 0===s&&(s=new Map,this.topics.set(t,s));var i=h();return s.set(i,e),i},this.desub=function(t,e){var s=this.topics.get(t);void 0!==s&&(s.delete(e),0==s.size&&this.topics.delete(t))},this.pub=function(t,s){var e=this.topics.get(t);void 0!==e&&e.forEach(function(t,e){try{t(s)}catch(t){}})}};return function(t,e){var o=Object.freeze({OUTOFSERVICE:0,CLOSED:1,OPEN:2});this.States=o;var s={debug:!0,syncTimeout:2e3,lanes:1,reconnectInterval:1e3,maintainanceInterval:2e3,protocols:"vlic",syncStarts:void 0,syncStops:void 0,syncErrorCallback:function(t){},stateCallback:function(t){console.log("[autobahn "+this.sessionId+"] transiate to state "+t)},exceptionCallback:function(t){console.log("uncatched exception occured: "+t)},statsOnSyncResponse:function(t,e){}};for(var i in e||(e={}),s)void 0!==e[i]?this[i]=e[i]:this[i]=s[i];this.mbus=new r,this.url=t,this.sessionId=c(),this.state=n(o.OUTOFSERVICE,this.stateCallback.bind(this)),this.websockets=[],this.registerWebsocket=function(t){t.lane=this.websockets.length,this.websockets.push(t)},this.sendInitData=function(e){null!==e&&this.websockets.filter(function(t){return t.readyState===WebSocket.OPEN}).map(function(t){try{e&&"string"!=typeof e&&(e=JSON.stringify(e)),t.send(e)}catch(t){console.log("Error sending init data to websocket due to: "+t)}})},this.initData=n({sessionId:this.sessionId,lanes:this.lanes},this.sendInitData.bind(this)),this.promises=new Map,this.resolvePromise=function(t,e){if(void 0!==e.data){var s=e.data;s&&"string"==typeof s&&(s=JSON.parse(s));var i=s.lease;if(void 0!==i){var o=this.promises.get(i);if(o){clearTimeout(o.timer),this.promises.delete(i);try{o.resolve(s)}finally{if(this.statsOnSyncResponse&&this.statsOnSyncResponse(t,+new Date-o.start),this.syncStops)try{this.syncStops(!0,s)}catch(t){console.log("failed to invoke syncStops: "+t)}}}else this.statsOnSyncResponse&&this.statsOnSyncResponse(t,void 0);return!0}}return!1},this.pub=function(t){if(void 0!==t.data){var e=t.data;e&&"string"==typeof e&&(e=JSON.parse(e));var s=e.topic;if(void 0!==s)return this.mbus.pub(s,e),!0}return!1},this.timeoutPromise=function(t){var e=this.promises.get(t);if(e){if(this.promises.delete(t),this.syncStops)try{this.syncStops(!1,t)}catch(t){console.log("failed to invoke syncStops: "+t)}this.syncErrorCallback&&this.syncErrorCallback(t),e.reject(Error("failed to receive data for lease "+t+" in time"))}},this.onopenWebsocket=function(t,e){if(this.state()===o.CLOSED&&this.state(o.OPEN),null!==this.initData())try{var s=this.initData();s&&"string"!=typeof s&&(s=JSON.stringify(s)),t.send(s)}catch(t){console.log("Error sending init data to websocket due to: "+t)}},this.oncloseWebsocket=function(t,e){this.debug&&console.log("[autobahn "+this.sessionId+"] receive close on websocket: "+e),0==this.websockets.filter(function(t){return t.readyState===WebSocket.CONNECTING|t.readyState===WebSocket.OPEN}).length&&this.state()!==o.OUTOFSERVICE&&this.state(o.CLOSED)},this.onerrorWebsocket=function(t,e){this.debug&&console.log("[autobahn] receive error on websocket: "+e)},this.onmessageWebsocket=function(t,e){this.debug&&console.log("[autobahn "+this.sessionId+"] receive message on websocket: "+e),this.resolvePromise(t,e)||this.pub(e)},this.initWebsocket=function(){0==this.websockets.filter(function(t){return t.readyState===WebSocket.OPEN}).length&&this.state(o.CLOSED);try{this.debug&&console.log("[autobahn "+this.sessionId+"] init websocket to "+this.url);var t=new WebSocket(this.url);this.registerWebsocket(t),t.onopen=this.onopenWebsocket.bind(this,t),t.onclose=this.oncloseWebsocket.bind(this,t),t.onerror=this.onerrorWebsocket.bind(this,t),t.onmessage=this.onmessageWebsocket.bind(this,t)}catch(t){console.log("Failed to instantiate websocket for URL "+this.url+" due to error: "+t),this.exceptionCallback&&this.exceptionCallback(t)}},this.mtn=function(){try{if(this.websockets=this.websockets.filter(function(t){return t.readyState===WebSocket.CONNECTING||t.readyState===WebSocket.OPEN}),this.websockets.length<this.lanes)for(var t=0==this.websockets.length,e=0;e<this.lanes-this.websockets.length&&(this.initWebsocket(),!t);e++);}catch(t){this.exceptionCallback&&this.exceptionCallback(t)}},this.mtn(),this.mtnTimer=setInterval(this.mtn.bind(this),this.maintainanceInterval),this.close=function(){clearInterval(this.mtnTimer),this.websockets=this.websockets.filter(function(t){return t.readyState===WebSocket.OPEN}),this.websockets.map(function(t){try{t.close(1e3,"Autobahn gets closed")}catch(t){console.log("failed to close websocket: "+t)}}),this.state(o.OUTOFSERVICE)},this.sync=function(t,e){var s=[];s.push(c()),s.push(h()),s=s.join("_");var i=this,o=new Promise(function(t,e){i.state()==i.States.CLOSED?e(Error("failed to send data in sync mode - autobahn is closed.")):i.promises.set(s,{resolve:t,reject:e})}),n=this.promises.get(s);if(n){n.promise=o;var r=this.websockets.filter(function(t){return t.readyState==WebSocket.OPEN});0==r.length&&(this.promises.delete(s),o.reject(Error("failed to send data in sync mode - autobahn is closed.")));var a=r[Math.floor(Math.random()*r.length)];try{if("object"==typeof t?t.lease=s:t={lease:s,data:t},this.syncStarts)try{this.syncStarts(t)}catch(t){console.log("failed to invoke syncStart: "+t)}t=JSON.stringify(t),a.send(t)}catch(t){this.promises.delete(s),o.reject(Error("failed to send data in sync mode - protocol error: "+t))}n.start=+new Date,timer=setTimeout(this.timeoutPromise.bind(i,s),e||this.syncTimeout),n.timer=timer}return o},this.async=function(t,e){if(this.state()==o.CLOSED)throw Error("failed to send data in async mode - autobahn is closed.");var s=this.websockets.filter(function(t){return t.readyState==WebSocket.OPEN});if(0==s.length)throw Error("failed to send data in async mode - autobahn is closed.");var i=s[Math.floor(Math.random()*s.length)];try{e=JSON.stringify({topic:t,data:e}),i.send(e)}catch(t){throw Error("failed to send data in sync mode - protocol error: "+t)}},this.sub=function(t,e){return this.mbus.sub(t,e)},this.desub=function(t,e){this.mbus.desub(t,e)}}});