/*! lambdaroyal-autobahn 2016-04-22 */
!function(a,b){"function"==typeof define&&define.amd?define([],b):"undefined"!=typeof module&&module.exports?module.exports=b():a.Autobahn=b()}(this,function(){var a=function(){for(var a=[],b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",c=0;10>c;c++)a.push(b.charAt(Math.floor(Math.random()*b.length)));return a.join("")},b=function(a){var b=function(){return arguments.length?a=arguments[0]:a+=1,a};return b}(0),c=function(a,b){var c=function(){return arguments.length&&(a=arguments[0],b&&b(a)),a};return c.toJSON=function(){return a},c},d=function(){this.topics=new Map,this.sub=function(a,c){var d=this.topics.get(a);void 0===d&&(d=new Map,this.topics.set(a,d));var e=b();return d.set(e,c),e},this.desub=function(a,b){var c=this.topics.get(a);void 0!==c&&(c["delete"](b),0==c.size&&this.topics["delete"](a))},this.pub=function(a,b){var c=this.topics.get(a);void 0!==c&&c.forEach(function(a,c){try{a(b)}catch(d){}})}},e=function(e,f){var g=Object.freeze({OUTOFSERVICE:0,CLOSED:1,OPEN:2});this.States=g;var h={debug:!0,syncTimeout:2e3,lanes:1,reconnectInterval:1e3,maintainanceInterval:2e3,protocols:"vlic",syncErrorCallback:function(a){},stateCallback:function(a){console.log("[autobahn "+this.sessionId+"] transiate to state "+a)},exceptionCallback:function(a){console.log("uncatched exception occured: "+a)},statsOnSyncResponse:function(a,b){}};f||(f={});for(var i in h)"undefined"!=typeof f[i]?this[i]=f[i]:this[i]=h[i];this.mbus=new d,this.url=e,this.sessionId=a(),this.state=c(g.OUTOFSERVICE,this.stateCallback.bind(this)),this.websockets=[],this.registerWebsocket=function(a){a.lane=this.websockets.length,this.websockets.push(a)},this.sendInitData=function(a){null!==a&&this.websockets.filter(function(a){return a.readyState===WebSocket.OPEN}).map(function(b){try{a&&"string"!=typeof a&&(a=JSON.stringify(a)),b.send(a)}catch(c){console.log("Error sending init data to websocket due to: "+c)}})},this.initData=c({sessionId:this.sessionId,lanes:this.lanes},this.sendInitData.bind(this)),this.promises=new Map,this.resolvePromise=function(a,b){if(void 0!==b.data){var c=b.data;c&&"string"==typeof c&&(c=JSON.parse(c));var d=c.lease;if(void 0!==d){var e=this.promises.get(d);if(e){clearTimeout(e.timer),this.promises["delete"](d);try{e.resolve(c)}finally{this.statsOnSyncResponse&&this.statsOnSyncResponse(a,+new Date-e.start)}}else this.statsOnSyncResponse&&this.statsOnSyncResponse(a,void 0);return!0}}return!1},this.pub=function(a){if(void 0!==a.data){var b=a.data;b&&"string"==typeof b&&(b=JSON.parse(b));var c=b.topic;if(void 0!==c)return this.mbus.pub(c,b),!0}return!1},this.timeoutPromise=function(a){var b=this.promises.get(a);b&&(this.promises["delete"](a),this.syncErrorCallback&&this.syncErrorCallback(a),b.reject(Error("failed to receive data for lease "+a+" in time")))},this.onopenWebsocket=function(a,b){if(this.state()===g.CLOSED&&this.state(g.OPEN),null!==this.initData())try{var c=this.initData();c&&"string"!=typeof c&&(c=JSON.stringify(c)),a.send(c)}catch(d){console.log("Error sending init data to websocket due to: "+d)}},this.oncloseWebsocket=function(a,b){this.debug&&console.log("[autobahn "+this.sessionId+"] receive close on websocket: "+b),0==this.websockets.filter(function(a){return a.readyState===WebSocket.CONNECTING|a.readyState===WebSocket.OPEN}).length&&this.state()!==g.OUTOFSERVICE&&this.state(g.CLOSED)},this.onerrorWebsocket=function(a,b){this.debug&&console.log("[autobahn] receive error on websocket: "+b)},this.onmessageWebsocket=function(a,b){this.debug&&console.log("[autobahn "+this.sessionId+"] receive message on websocket: "+b),this.resolvePromise(a,b)||this.pub(b)},this.initWebsocket=function(){this.state()===g.OUTOFSERVICE&&this.state(g.CLOSED);try{this.debug&&console.log("[autobahn "+this.sessionId+"] init websocket to "+this.url);var a=new WebSocket(this.url);this.registerWebsocket(a),a.onopen=this.onopenWebsocket.bind(this,a),a.onclose=this.oncloseWebsocket.bind(this,a),a.onerror=this.onerrorWebsocket.bind(this,a),a.onmessage=this.onmessageWebsocket.bind(this,a)}catch(b){console.log("Failed to instantiate websocket for URL "+this.url+" due to error: "+b),this.exceptionCallback&&this.exceptionCallback(b)}},this.mtn=function(){try{if(this.websockets=this.websockets.filter(function(a){return a.readyState===WebSocket.CONNECTING||a.readyState===WebSocket.OPEN}),this.websockets.length<this.lanes)for(var a=0==this.websockets.length,b=0;b<this.lanes-this.websockets.length&&(this.initWebsocket(),!a);b++);}catch(c){this.exceptionCallback&&this.exceptionCallback(c)}},this.mtn(),this.mtnTimer=setInterval(this.mtn.bind(this),this.maintainanceInterval),this.close=function(){clearInterval(this.mtnTimer),this.websockets=this.websockets.filter(function(a){return a.readyState===WebSocket.OPEN}),this.websockets.map(function(a){try{a.close(1e3,"Autobahn gets closed")}catch(b){console.log("failed to close websocket: "+b)}}),this.state(g.OUTOFSERVICE)},this.sync=function(c,d){var e=[];e.push(a()),e.push(b()),e=e.join("_");var f=this,g=new Promise(function(a,b){f.state()==f.States.CLOSED?b(Error("failed to send data in sync mode - autobahn is closed.")):f.promises.set(e,{resolve:a,reject:b})}),h=this.promises.get(e);if(h){h.promise=g;var i=this.websockets.filter(function(a){return a.readyState==WebSocket.OPEN});0==i.length&&(this.promises["delete"](e),g.reject(Error("failed to send data in sync mode - autobahn is closed.")));var j=i[Math.floor(Math.random()*i.length)];try{"object"==typeof c?c.lease=e:c={lease:e,data:c},c=JSON.stringify(c),j.send(c)}catch(k){this.promises["delete"](e),g.reject(Error("failed to send data in sync mode - protocol error: "+k))}h.start=+new Date,timer=setTimeout(this.timeoutPromise.bind(f,e),d?d:this.syncTimeout),h.timer=timer}return g},this.async=function(a,b){if(this.state()==g.CLOSED)throw Error("failed to send data in async mode - autobahn is closed.");var c=this.websockets.filter(function(a){return a.readyState==WebSocket.OPEN});if(0==c.length)throw Error("failed to send data in async mode - autobahn is closed.");var d=c[Math.floor(Math.random()*c.length)];try{b=JSON.stringify({topic:a,data:b}),d.send(b)}catch(e){throw Error("failed to send data in sync mode - protocol error: "+e)}},this.sub=function(a,b){return this.mbus.sub(a,b)},this.desub=function(a,b){this.mbus.desub(a,b)}};return e});